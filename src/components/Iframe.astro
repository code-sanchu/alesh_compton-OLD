---
type Props = {
  src: string;
};
const { src } = Astro.props;

// NOTES
// - iframe doesn't rerender by default on container size change
// - can't programmatically play youtube video and have volume before first interaction
---

<div id="container" class="container">
  <iframe
    id="iframe"
    src={src}
    allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; fullscreen"
    frameborder="0"
    allowfullscreen></iframe>
  <div id="overlay" class="overlay"></div>
</div>

<style>
  .container {
    position: relative;
    width: 100%;
    height: 100%;
  }
  .overlay {
    z-index: 1;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(254, 254, 254, 0.5);
    transition: opacity 0.2s ease-in-out;
  }
</style>

<script type="text/javascript">
  const container = document.getElementById("container");
  const iframeId = "iframe";
  const iframe = document.getElementById(iframeId);
  const overlay = document.getElementById("overlay");

  const containerBounds = container.getBoundingClientRect();

  iframe.height = `${containerBounds.height}`;
  iframe.width = `${(containerBounds.height * 16) / 9}`;

  var tag = document.createElement("script");
  tag.id = "iframe-demo";
  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName("script")[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player(iframeId, {
      playerVars: { autoplay: 1, controls: 0, mute: 1 },
      events: {
        onReady: onPlayerReady,
        onStateChange: onPlayerStateChange,
      },
    });

    overlay.addEventListener("click", () => {
      overlay.style.opacity = "0";
      player.playVideo();
      setTimeout(() => {
        overlay.style.zIndex = "-1";
      }, 200);
    });
  }
  function onPlayerReady(event) {
    iframe.style.border = "2px solid red";
    event.target.setVolume(0);
    // event.target.playVideo();
    /*     setTimeout(() => {
      event.target.setVolume(10);
    }, 500); */
  }
  function changeBorderColor(playerStatus) {
    var color;
    if (playerStatus == -1) {
      color = "#37474F"; // unstarted = gray
    } else if (playerStatus == 0) {
      color = "#FFFF00"; // ended = yellow
    } else if (playerStatus == 1) {
      color = "#33691E"; // playing = green
    } else if (playerStatus == 2) {
      color = "#DD2C00"; // paused = red
    } else if (playerStatus == 3) {
      color = "#AA00FF"; // buffering = purple
    } else if (playerStatus == 5) {
      color = "#FF6DOO"; // video cued = orange
    }
    if (color) {
      document.getElementById("existing-iframe-example").style.borderColor =
        color;
    }
  }

  function onPlayerStateChange(event) {
    console.log(event);
    const isPlaying = event.data === 1;
    const isPaused = event.data === 2;

    if (isPaused) {
      overlay.style.zIndex = "1";
      overlay.style.opacity = "1";
    }
  }
</script>

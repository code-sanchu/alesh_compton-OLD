---
import { Image } from "@astrojs/image/components";

import {
  getThumbnailFromYoutubeId,
  getYoutubeEmbedUrlFromId,
  getYoutubeVideoIdFromUrl,
} from "~helpers/youtube";
import { domain } from "~data/index";

import CloseIcon from "./CloseIcon.astro";
import PlayIcon from "./PlayIcon.astro";
import VolumeIcon from "./VolumeIcon.astro";

import type { YoutubeVideo } from "~types/index";
import Mute from "~components/icons/Mute.astro";

type Props = { isFirst: boolean; index: number } & YoutubeVideo;

// TODO: try remove controls param below
const { youtubeUrl, coverImage, isFirst, index } = Astro.props;

const youtubeId = getYoutubeVideoIdFromUrl(youtubeUrl)!;
const youtubeEmbedSrc = getYoutubeEmbedUrlFromId(youtubeId);
const youtubeThumbnailSrc = getThumbnailFromYoutubeId(youtubeId);

const youtubeIframeParams = `?enablejsapi=1&modestbranding=1&rel=0&color=white&frameborder=0&origin=${
  import.meta.env.PROD ? domain : ""
}`;

const coverImageYPosition = coverImage?.yPosition || 50;
---

<div class="iframe-container media-transform" id={`${index}`}>
  <div class="inner-container">
    <span class="bg-loading-text">Loading...</span>
    <iframe
      id={youtubeId}
      class="iframe"
      src={youtubeEmbedSrc + youtubeIframeParams}
      loading="lazy"
      allowfullscreen></iframe>
    <div class="iframe-helper">
      <div id="volume-message" class="iframe-helper-item volume-message">
        <span id="volume-message-icon-mute">
          <Mute />
        </span>
        <span id="volume-message-icon-volume">
          <VolumeIcon />
        </span>
        <span id="volume-message-text">use youtube controls for volume</span>
      </div>
      <div class="iframe-helper-item volume-buttons">
        <div class="volume-button" id="volume-down">-</div>
        <VolumeIcon />
        <div class="volume-button" id="volume-up">+</div>
      </div>
      <div id="close-button" class="iframe-helper-item close-button">
        <span>close</span>
        <CloseIcon />
      </div>
    </div>
  </div>
  <div class="iframe-overlay">
    <div id="player-loading" class="player-loading">Loading youtube...</div>
    <div id="iframe-overlay-close-button" class="overlay-close-button">
      <span>close</span>
    </div>
    {
      coverImage ? (
        <Image
          class="iframe-img"
          src={coverImage.url}
          alt=""
          style={{
            objectPosition: `50% ${coverImageYPosition}%`,
          }}
          loading={isFirst ? "eager" : "lazy"}
          format="avif"
        />
      ) : (
        <Image
          class="iframe-img"
          src={youtubeThumbnailSrc}
          width={1600}
          aspectRatio="16:9"
          alt=""
          style={{
            objectPosition: `50% ${coverImageYPosition}%`,
          }}
          loading={isFirst ? "eager" : "lazy"}
          format="avif"
        />
      )
    }
    <div class="play-icon">
      <PlayIcon lineWidth={2} />
    </div>
  </div>
</div>

<style>
  .iframe-container {
    position: relative;
    height: 100%;
    max-height: 1000px;
    /* max-width: 70vw; */
    aspect-ratio: 16/9;
  }
  .inner-container {
    position: absolute;
    width: 100%;
    aspect-ratio: 16/9;
  }
  .iframe {
    display: none;
    z-index: 1;
    position: absolute;
    width: 100%;
    height: 100%;
    border: none;
  }
  /* will show when iframe image and video haven't loaded in */
  .bg-loading-text {
    position: absolute;
    left: 1em;
    top: 1em;
    font-size: small;
  }
  .iframe-overlay {
    z-index: 2;
    position: absolute;
    width: 100%;
    aspect-ratio: 16/9;
    transition: opacity ease-in-out 0.2s;
  }
  .iframe-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .overlay-close-button {
    z-index: -1;
    opacity: 0;
    position: absolute;
    right: 5%;
    top: 7%;
    padding: 1em 2em;
    text-transform: capitalize;
    border-radius: 5px;
    display: flex;
    align-items: center;
    gap: 0.5em;
    backdrop-filter: blur(20px);
    background-color: rgba(35, 35, 35, 0.6);
    color: white;
    border: 2px solid white;
    transition: opacity ease-in-out 0.2s;
  }
  .player-loading {
    z-index: -1;
    opacity: 0;
    position: absolute;
    left: 0.5em;
    top: 0.5em;
    padding: 0.2em 0.5em;
    border-radius: 3px;
    transition: opacity 0.2s ease-in-out;
    backdrop-filter: blur(20px);
    background-color: rgba(255, 255, 255, 0.5);
  }
  .iframe-helper {
    opacity: 0;
    z-index: -1;
    position: absolute;
    bottom: -0.5em;
    left: 0;
    transform: translateY(100%);
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: small;
    transition: opacity 0.2s ease-in-out;
  }
  .iframe-helper-item {
    border-radius: 3px;
    display: flex;
    align-items: center;
    gap: 0.5em;
    backdrop-filter: blur(20px);
    background-color: rgba(255, 255, 255, 0.5);
  }
  .close-button {
    cursor: pointer;
    padding-left: 4px;
    transition: opacity ease-in-out 0.2s;
  }
  .volume-message {
    padding-right: 4px;
    white-space: wrap;
    pointer-events: none;
    display: flex;
    align-items: center;
    gap: 0.5em;
  }
  #volume-message-icon-mute {
    display: none;
  }
  .volume-buttons {
    display: none;
    opacity: 0;
    gap: 1em;
    padding-right: 0.5em;
    padding-left: 0.5em;
    /* gap: 1em; */
  }
  .volume-button {
    font-size: larger;
    width: 20px;
    height: 20px;
    display: grid;
    place-items: center;
    border-radius: 50%;

    transition: background-color 100ms ease-in-out;
  }
  .play-icon {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 10%;
    aspect-ratio: 1;
    min-width: 20px;
  }

  @media (orientation: landscape) and (max-width: 800px) {
    .iframe-helper {
      bottom: -2px;
    }
    .volume-button:active {
      background-color: #d1d5db;
    }
  }
  @media (hover: none) {
    #volume-message-icon-mute {
      display: block;
    }
    #volume-message-icon-volume {
      display: none;
    }
  }
</style>
